agregar_linea_especifica,(indice linea lista),generales,"union = unir_linea(linea "" "").strip()",lista.insert(indice union),return lista
analizador_funcion,(linea_fuente linea_comentarios archivo),merge,"lectura = leer_linea(archivo "" "")",palabras_faltantes =,"while lectura and ""def""!= lectura 03 ",lectura= lectura.strip().split(),"lectura = reemplazar_toda_la_lista(lectura "" "" "" "")","lectura = item_necesario(lectura "" "" "" "")","lectura = item_necesario(lectura "" "" "" "")","lectura = item_necesario(lectura ""# "" ""# "")","cuento = lectura.count('""""""')",while cuento == 1,"segunda_lectura=leer_linea(archivo "" "").strip().split()","segunda_lectura = item_necesario(segunda_lectura "" "" """")","segunda_lectura = item_necesario(segunda_lectura "" "" "" "")","segunda_lectura = item_necesario(segunda_lectura "" "" "" "")",lectura.extend(segunda_lectura),"cuento = lectura.count('""""""')","lectura = reemplazar_toda_la_lista(lectura "" "" "" "" """" """")","encontradas = buscar_dato( ""Ayuda"" ""Autor"" ""# "" '""""""' lectura)",linea_fuente linea_comentarios palabras_faltantes = linea_ayuda_autor(lectura linea_comentarios linea_fuente encontradas palabras_faltantes),if len(encontradas) == 0 and lectura,"linea_fuente.append(unir_linea(lectura "" ""))","lectura = leer_linea(archivo "" "")",linea_comentarios = encontrar_palabras(palabras_faltantes linea_comentarios),return linea_comentarios linea_fuente lectura
archivos,(),merge,lista_archivos =,"rutas = open(""programas.txt"" 'r')",ruta = leer_linea_string(rutas),i = 0,while ruta,i+=1,"nombre_archivo = ruta.split(""/"").pop()",nombre_archivo=nombre_archivo 0len(nombre_archivo)-3,"codigo = open(ruta 'r' newline=""\n"")",fuente_unico comentarios = proceso_archivos(nombre_archivo codigo),"ruta_fuente = ""fuente_unico""+str(i) +"".csv""","ruta_comentarios= ""comentarios""+str(i) +"".csv""",generar_archivo(fuente_unico ruta_fuente),generar_archivo(comentarios ruta_comentarios),lista_archivos.append(ruta_fuente),lista_archivos.append(ruta_comentarios),ruta = leer_linea_string(rutas),separador_archivos(lista_archivos),eliminar_archivos(lista_archivos)
autor,(lista_ar dic),panel_general_de_funciones,for funcion in lista_ar,"dic funcion 0 ""Autor"" = funcion 1",return dic
ayuda,(lista_ar dic),panel_general_de_funciones,for funcion in lista_ar,if (funcion 2 == ''),"dic funcion 0 ""Ayuda"" = ""No""",else,"dic funcion 0 ""Ayuda"" = ""Si""",return dic
buscar_dato,(lista_datos linea),generales,encontradas =,for palabra in lista_datos,if palabra in linea,encontradas.append(palabra),return encontradas
buscar_funciones,(archivo funcion),archivos,"linea=leer_linea_clasico(archivo "" "")",while funcion!= linea 0 ,"if linea 0 !=""""","linea=leer_linea_clasico(archivo "" "")",else,"funcion=""""",return linea
carga_informacion_desarrollador,(dicc_desarrolladores total_lineas),tabla,total_desarrollador = 0,"participacion = ""participacion.txt""","with open(participacion ""w"") as informe",total_funciones = 0,linea = '-'*50,informe.write('\n\tInforme de Desarrollo por Autor'+'\n'),for autor funciones in dicc_desarrolladores.items(),acum_lineas = 0,cant_funciones_desarrollador = 0,informe.write('\n'+linea),informe.write('\n\nAutor {}\n'.format(autor)),"informe.write(""{>30}\t\t{}\n"".format('Función' 'Lineas'))",informe.write(linea+'\n'),lista_funciones = sorted(funciones key= lambda funcionfuncion 1 ),total_funciones += len(lista_funciones),for data in lista_funciones,cant_funciones_desarrollador += 1,acum_lineas += data 1,"informe.write(""{>30}\t\t{}"".format(data 0 data 1 )+'\n')",porcentaje=(acum_lineas*100)//total_lineas,"informe.write(""\t{} Funcion/es - Lineas\t\t{} {}%"".format(cant_funciones_desarrollador acum_lineas porcentaje))",informe.write('\n\nTotal Funciones {} - Lineas {}'.format(total_funciones total_lineas)+'\n'),imprimir_tabla_desarrollador(participacion)
contador,(elementos lista_ar dic),panel_general_de_funciones,for elemento in elementos,for funcion in lista_ar,for i in range(3 len(funcion)),dic funcion 0 elemento += funcion i .count(elemento),return dic
crear_filas,(invocaciones funciones total),reutilizacion_codigo,nueva_fila =,y = len(funciones),for x in range(1 y+1),filas =,nueva_fila.append(filas),for funcion in invocaciones,if funciones x-1 in invocaciones funcion ,"filas.append(""{^4}|"".format(""x""))",elif funcion in invocaciones funciones x-1 ,"filas.append(""{^4}|"".format(invocaciones funciones x-1 funcion ))",total funcion += invocaciones funciones x-1 funcion,else,"filas.append(""{^4}|"".format(""""))",return nueva_fila total
crear_tabla,(invocaciones tabla funciones),reutilizacion_codigo,x = len(funciones),"primera_fila = """"",t = 0,total = {},"nuevo = """"",funciones = lista_de_funciones(),for funcion in funciones,total funcion = 0,nueva_fila total = crear_filas(invocaciones funciones total),for i in range(1 x+1),"primera_fila += ""{^4}|"".format(i)","tabla.write(""-""*41 + ""-----""*x + ""\n"")","tabla.write(""|{<40}|"".format(""FUNCIONES"") + primera_fila + ""\n"")",for filas funcion in zip(nueva_fila invocaciones.keys()),t+=1,"tabla.write(""|"" + ""-""*40 + ""|----""*x + ""|\n"")","tabla.write(""|{<40}|"".format(str(t)+ ""-"" + funcion.replace(""$"" """")) +"""".join(filas)+ ""\n"" )","tabla.write(""|"" + ""-""*40 + ""|----""*x + ""|\n"")",for valor in total.values(),"nuevo += ""{^4}|"".format(str(valor))","tabla.write(""|{40}|"".format(""Total Invocaciones"") + nuevo + ""\n"")","tabla.write(""|"" + ""-""*40 + ""|----""*x + ""|\n"")"
eliminar_archivos,(archivos),merge,for archivo in archivos,remove(archivo)
encontrar_palabras,(palabras linea_comentarios),merge,"if ""Autor"" not in palabras","linea_comentarios.insert(1 ""N/N"")","if ""Ayuda"" not in palabras","linea_comentarios.insert(2 ""N/N"")",return linea_comentarios
formateo_linea,(lista),archivos,n=0,acumulador=0,nueva_lista=lista.split(),while len(nueva_lista)!=n,acumulador+=len(nueva_lista n ),n+=1,if acumulador<=70 and acumulador>50,"nueva_lista.insert(n ""\n"")",acumulador=0,"lista="" "".join(nueva_lista)",return lista
formato_interrogacion,(lista_funciones lista_comentarios),tabla,"print(""-------------------------------------------------"")","print(""Función {0}\r\nAyuda {1}\r\nParametros {2}\r\nModulo {3}\r\nAutor {4}"".format(lista_funciones 0 lista_comentarios 2 lista_funciones 1 lista_funciones 2 lista_comentarios 1 ))","print(""----------------------------------"")"
formato_numeral,(lista_funciones lista_comentarios),tabla,n=3,m=2,"print(""-------------------------------------------------"")","print(""Función {0}\nParametros {1}\nModulo {2}\nAutor {3}\nDescripcion{4}\nExtra "".format(lista_funciones 0 lista_funciones 1 lista_funciones 2 lista_comentarios 1 lista_comentarios 2 ))",while (len(lista_funciones)!=n),print(lista_funciones n ),n+=1,while len(lista_comentarios)!=m,print(lista_comentarios m ),m+=1,return
funciones_invocadas,(fuente),reutilizacion_codigo,linea = leer_linea(fuente),invocaciones = {},while linea,funcion_1 = linea 0,invocaciones funcion_1 = veces_invocadas(linea),linea = leer_linea(fuente),return invocaciones
generar_archivo,(lista ruta),archivos,"archivo = open(ruta ""w"")",for funcion in lista,"leyenda = "" "".join(funcion)+""\n""",grabar_archivo(archivo leyenda),archivo.close()
generar_archivo,(dic),panel_general_de_funciones,"archivo = open(""panel_general.csv"" ""w"")","lista = ""Funcion "" ""Parametros "" ""lineas "" ""invocaciones "" ""Returns "" ""If/Elif "" ""For "" ""While "" ""Break "" ""Exit "" ""Coment "" ""Ayuda "" ""Autor""",for elemento in lista,archivo.write(elemento),"archivo.write(""\n"")",for funcion_principal in dic,"if_elif = ""if"" ""elif""",valor_final = 0,for valores in dic funcion_principal ,valor = dic funcion_principal valores,if_elif = grabar_linea(valor valores if_elif archivo valor_final),"archivo.write(""\n"")",archivo.close()
grabar_archivo,(archivo leyenda),archivos,archivo.write(leyenda)
grabar_linea,(valor nombre if_elif archivo valor_final),panel_general_de_funciones,"if nombre == ""if"" or nombre == ""elif""",valor_final += valor,if_elif.remove(nombre),if len(if_elif)==0,"leyenda = str(valor_final) + "" """,grabar_archivo(archivo leyenda),"elif nombre == ""Parametros""",if len(valor) == 0,valor = 0,"leyenda = str(valor) + "" """,grabar_archivo(archivo leyenda),else,"parametros = valor.count("" "")+1","leyenda = str(parametros) + "" """,grabar_archivo(archivo leyenda),else,"leyenda = str(valor) + "" """,grabar_archivo(archivo leyenda),return if_elif
guardar_archivo,(archivo_aux lista_archivos),merge,archivo_mezcla = tipo_archivos(lista_archivos 0 ),"with open(archivo_mezcla ""w"") as prestaciones","with open(archivo_aux ""r"") as auxiliar",entrada = csv.reader(auxiliar),ordenado = sorted(entrada key=lambda fila fila 0 ),for fila in ordenado,salida = csv.writer(prestaciones),salida.writerow(fila),remove(archivo_aux)
imprimir_analizador,(),reutilizacion_codigo,"fuente=open(""fuente_unico.csv"" ""r"")",analizador = open('analizador.txt' 'w+'),invocaciones = funciones_invocadas(fuente),funciones = lista_de_funciones(),crear_tabla(invocaciones analizador funciones),analizador.seek(0),fila = analizador.readline().strip(),"while fila != """"",print(fila),fila = analizador.readline().rstrip(),analizador.close(),fuente.close()
imprimir_panel,(dic),tabla,"Tabla = (Tabla.format('\n'.join('|{030}\t{15}\t{28}\t{35}\t{49}\t{54}\t{64}\t{73}\t{83}\t{93}\t{103}\t{111}\t{128}|'.format(dic funcion ""Nombre"" dic funcion ""Parametros"" .count("" "") dic funcion ""Lineas""","dic funcion ""Invocaciones"" dic funcion ""return""","dic funcion ""if"" + dic funcion ""elif"" dic funcion ""for"" dic funcion ""while"" dic funcion ""break"" dic funcion ""exit"" dic funcion ""Coment""","dic funcion ""Ayuda"" dic funcion ""Autor"" )",for funcion in dic))),print (Tabla)
imprimir_tabla_desarrollador,(participacion),tabla,informacion = open(participacion 'r'),linea = informacion.readline(),print(linea),"while linea != """"",print(linea),linea = informacion.readline(),informacion.close()
imprimir_todo,(archivo lista_funcion lista_comentarios),tabla,if len(lista_funcion 1 )>80 or len(lista_comentarios 2 ),lista_funcion 1 =formateo_linea(lista_funcion 1 ),lista_comentarios 2 =formateo_linea(lista_comentarios 2 ),"archivo.write(""-------------------------------------------------\n"")","archivo.write(""Función {0}\r\nAyuda {1}\r\nParametros {2}\r\nModulo {3}\r\nAutor {4}\n"".format(lista_funcion 0 lista_comentarios 2 lista_funcion 1 lista_funcion 2 lista_comentarios 1 ))","archivo.write(""-------------------------------------------------\n"")"
imprimir_todo,(archivo lista_funcion lista_comentarios),tabla,if len(lista_funcion 1 )>80 or len(lista_comentarios 2 )>80,lista_funcion 1 =formateo_linea(lista_funcion 1 ),lista_comentarios 2 =formateo_linea(lista_comentarios 2 ),"archivo.write(""-------------------------------------------------\n"")","archivo.write(""Función {0}\r\nAyuda {1}\r\nParametros {2}\r\nModulo {3}\r\nAutor {4}\n"".format(lista_funcion 0 lista_comentarios 2 lista_funcion 1 lista_funcion 2 lista_comentarios 1 ))","archivo.write(""-------------------------------------------------\n"")"
indice_vaciado,(lista_datos lista_borrar),merge,i=0,while i<len(lista_datos) and len(lista_borrar)>0,if lista_datos i in lista_borrar,lista_borrar.remove(lista_datos i ),i+=1,return i
informacion_desarrolladores,(),informacion_desarrollador,total_lineas =0,dicc_desarrolladores = {},"with open(""comentarios.csv"" ""r"") as comentarios \","open(""fuente_unico.csv"" ""r"") as fuente_unico",linea_comentarios = leer_archivos_csv(comentarios),linea_fuente_unico = leer_archivos_csv(fuente_unico),while linea_comentarios and linea_fuente_unico,total_lineas += len(linea_fuente_unico 3 ),if linea_comentarios 1 .strip() in dicc_desarrolladores,dicc_desarrolladores linea_comentarios 1 .strip() .append( linea_fuente_unico 0 len(linea_fuente_unico 3 ) ),else,dicc_desarrolladores linea_comentarios 1 .strip() = linea_fuente_unico 0 len(linea_fuente_unico 3 ),linea_fuente_unico = leer_archivos_csv(fuente_unico),linea_comentarios = leer_archivos_csv(comentarios),carga_informacion_desarrollador(dicc_desarrolladores total_lineas)
ingresar,(leyenda),menu,return input(leyenda)
invocaciones,(lista_ar dic),panel_general_de_funciones,for key in dic,for funcion in lista_ar,for i in range(2 len(funcion)),"dic key ""Invocaciones"" += funcion i .count(key)",return dic
item_necesario,(linea eliminar condicion),generales,i=0,nueva_lista=,for elementos in linea,"nuevo_string=""""",for letras in elementos,if eliminar == letras,nuevo_string+=condicion,else,nuevo_string+=letras,lista=nuevo_string.split(),nueva_lista.extend(lista),i+=1,return nueva_lista
leer_archivos_csv,(archivocsv),informacion_desarrollador,linea = archivocsv.readline(),"return linea.rstrip('\n').split(' ') if linea else """""
leer_linea,(archivo corte),archivos,linea = archivo.readline(),if linea,devolver = linea,else,"devolver = """"",return devolver
leer_linea,(archivo),reutilizacion_codigo,linea = archivo.readline().strip().split(),if linea,devolver = linea,else,"devolver = """"",return devolver
leer_linea_clasico,(archivo corte),archivos,"linea = archivo.readline().strip(""\n"").split(corte)","if linea 0 !=""""",devolver = linea,else,"devolver = """" """" """"",return devolver
leer_linea_string,(archivo),archivos,return archivo.readline().strip()
linea_ayuda_autor,(linea linea_comentarios linea_fuente palabras_buscadas palabras_faltantes),merge,"if ""Autor"" in palabras_buscadas and ""Ayuda"" in palabras_buscadas","palabras_faltantes.append(""Autor"")","palabras_faltantes.append(""Ayuda"")","i = indice_vaciado(linea ""Ayuda"" ""Autor"" )",linea_segunda=linea i-1len(linea),linea_primera = linea 0i-1,"linea_primera = reemplazar_toda_la_lista(linea_primera ""Autor"" ""Ayuda"" '""""""' "" "" """")","linea_segunda = reemplazar_toda_la_lista(linea_segunda ""Autor"" ""Ayuda"" '""""""' "" "" """")",linea_comentarios = agregar_linea_especifica(1 linea_primera linea_comentarios),linea_comentarios = agregar_linea_especifica(2 linea_segunda linea_comentarios),"elif ""Autor"" in palabras_buscadas ","palabras_faltantes.append(""Autor"")","union=reemplazar_toda_la_lista(linea '""""""' ' ' ' ' ""Autor"" """" """")",linea_comentarios = agregar_linea_especifica(1 union linea_comentarios),"elif ""Ayuda"" in palabras_buscadas","palabras_faltantes.append(""Ayuda"")","union= reemplazar_toda_la_lista(linea '""""""' ' ' ' ' ""Ayuda"" """" """")",linea_comentarios = agregar_linea_especifica(2 union linea_comentarios),"elif ""# "" in palabras_buscadas or '""""""' in palabras_buscadas",linea_fuente linea_comentarios=seccion_comentarios(linea linea_comentarios linea_fuente),return linea_fuente linea_comentarios palabras_faltantes
lineas_coment,(lista_ar dic),panel_general_de_funciones,for funcion in lista_ar,if (len(funcion) > 3),"dic funcion 0 ""Coment"" += len(funcion) -3",return dic
lista_de_funciones,(),reutilizacion_codigo,"fuente=open(""fuente_unico.csv"" ""r"")",linea = leer_linea(fuente ),funciones =,while linea,funciones.append(linea 0 ),linea = leer_linea(fuente),fuente.close(),return funciones
listar_archivo,(archivo),generales,lista_ar =,"linea = (leer_linea(archivo "" ""))",while linea,"lista_ar.append(linea.split("" ""))","linea = leer_linea(archivo "" "")",return lista_ar
main,(),main,"if __name__==""__main__""",menu(),main()
menu,(),menu,vacio=validacion_archivo_programas(),if vacio!=True,archivos(),"fuente_codigo = open(""fuente_unico.csv"" ""r"")","comentarios = open(""comentarios.csv"" ""r"")",texto_menu(),"opcion =input(""Ingrese una opcion "")",while opcion,"os.system(""clear"")","while opcion not in ""12345""",texto_menu(),"opcion=input(""Ingrese una opcion valida o enter para salir "")","if opcion == """"","print(""Gracias por participar de nuestro programa"")",exit(),"elif opcion==""1""",panel_general(fuente_codigo comentarios),"enter = input(""Ingrese enter para continuar"")","elif opcion==""2""",panel_consultas(fuente_codigo comentarios),"elif opcion==""3""",imprimir_analizador(),"enter = input(""Ingrese enter para continuar"")","elif opcion==""4""",pass,"elif opcion==""5""",informacion_desarrolladores(),"enter = input(""Ingrese enter para continuar"")","os.system(""clear"")",texto_menu(),"opcion=ingresar(""Ingrese una opción o en blanco para salir "")",fuente_codigo.close(),comentarios.close(),else,"print(""\n\t\tATENCION ! \n\n\tProgramas.txt ESTA VACIO\n"")"
mezcla,(lista_archivos),merge,"archivo_aux = ""archivo_aux.csv""","with open(archivo_aux ""w"") as unificado",for archivo in lista_archivos,with open(archivo 'r') as arch,"linea = leer_linea(arch "" "").strip().split("" "")","while linea 0 !=""""",entrada = csv.writer(unificado),entrada.writerow(linea),"linea = leer_linea(arch "" "").strip().split("" "")",guardar_archivo(archivo_aux lista_archivos)
opcion_todo,(nombre archivo_funciones archivo_comentarios),panelConsulta,"ayuda_funciones=open(""ayuda_funciones.txt"" ""w"")",archivo_funciones.seek(0),archivo_comentarios.seek(0),"lista_funciones=leer_linea_clasico(archivo_funciones "" "")","lista_comentarios=leer_linea_clasico(archivo_comentarios "" "")","while lista_funciones 0 !=""""",nombre_funcion=lista_funciones 0,"if nombre == ""?todo""",formato_interrogacion(lista_funciones lista_comentarios),"elif nombre==""imprimir ?todo""",imprimir_todo(ayuda_funciones lista_funciones lista_comentarios),else,formato_numeral(lista_funciones lista_comentarios),"lista_comentarios = leer_linea_clasico(archivo_comentarios "" "")","lista_funciones = leer_linea_clasico(archivo_funciones "" "")",ayuda_funciones.close(),return
opciones_funcion,(valor archivo_funciones archivo_comentarios),panelConsulta,"if valor == ""?todo"" or valor == ""# todo"" or valor ==""imprimir ?todo""","print(""loop"")",opcion_todo (valor archivo_funciones archivo_comentarios),else,"nombre_funcion=valor.replace(valor -1 """")",archivo_comentarios.seek(0),archivo_funciones.seek(0),lista_comentarios = buscar_funciones(archivo_comentarios nombre_funcion),lista_funciones = buscar_funciones(archivo_funciones nombre_funcion),"if (valor.endswith(""?"")) and (lista_comentarios 0 !="""") and (lista_funciones 0 !="""")",formato_interrogacion(lista_funciones lista_comentarios),"elif (valor.endswith(""# "")) and (lista_comentarios 0 !="""") and (lista_funciones 0 !="""")",formato_numeral(lista_funciones lista_comentarios),else,"print(""\nPorfavor ingrese un nombre de funcion valido seguido de ? o",return
ordenamiento_insercion,(lista),generales,for indice in range(1 len(lista)),valor = lista indice,i = indice-1,variable = True,while i >= 0 and variable == True,if valor<lista i ,lista i+1 = lista i,lista i = valor,i = i-1,else,variable = False,return lista
organizar_archivo,(lista_ar),panel_general_de_funciones,funciones ={},for funcion in lista_ar,funciones funcion 0 = {},"funciones funcion 0 ""Nombre"" = ""{}.{}"".format(funcion 0 funcion 2 )","funciones funcion 0 ""Parametros"" = funcion 1 .strip('()')","funciones funcion 0 ""Lineas"" = len(funcion) - 2","funciones funcion 0 ""Invocaciones"" = 0","funciones funcion 0 ""return"" = 0","funciones funcion 0 ""if"" = 0","funciones funcion 0 ""elif"" = 0","funciones funcion 0 ""for"" = 0","funciones funcion 0 ""while"" = 0","funciones funcion 0 ""break"" = 0","funciones funcion 0 ""exit"" = 0","funciones funcion 0 ""Coment"" = 0","funciones funcion 0 ""Ayuda"" = """"","funciones funcion 0 ""Autor"" = """"",return funciones
panel_consultas,(fuente_unico comentarios),panelConsulta,tabla_consultas(comentarios),"valor_solicitado=input(""\nFunción "")",while valor_solicitado,"if valor_solicitado==""imprimir ?todo"" or valor_solicitado==""?todo"" or valor_solicitado==""# todo""",opcion_todo(valor_solicitado fuente_unico comentarios),else,opciones_funcion(valor_solicitado fuente_unico comentarios),"valor_solicitado=input(""\nFunción "")"
panel_general,(fuente_unico comentarios),panel_general_de_funciones,lista_fuente_unico = listar_archivo(fuente_unico),lista_comentarios = listar_archivo(comentarios),diccionario = organizar_archivo(lista_fuente_unico),dic_final = unir(diccionario lista_fuente_unico lista_comentarios),generar_archivo(dic_final),tabla.imprimir_panel(dic_final)
proceso_archivos,(nombre_modulo archivo),merge,funciones_fuente =,funciones_comentarios =,"ultima_lectura = leer_linea(archivo "" "")",while ultima_lectura,ultima_lectura = ultima_lectura.strip().split(),"if len(ultima_lectura)>0 and ultima_lectura 0 == ""def""","ultima_lectura = item_necesario(ultima_lectura ""("" "" ("")","ultima_lectura = item_necesario(ultima_lectura """" """")",parametros = reunir_parametros(ultima_lectura),nombre_funcion = ultima_lectura 1,"parametros = reemplazar_string("" "" "" "" parametros)",linea_fuente = nombre_funcion parametros nombre_modulo,linea_comentarios = nombre_funcion,linea_comentarios linea_fuente ultima_lectura = analizador_funcion(linea_fuente linea_comentarios archivo),funciones_fuente.append(linea_fuente),funciones_comentarios.append(linea_comentarios),else# Si no es un def no es una funcion.Probablemente sea un from o un bloque principal.El enunciado no pide analizarlo.,"ultima_lectura=leer_linea(archivo "" "")",return ordenamiento_insercion(funciones_fuente) ordenamiento_insercion(funciones_comentarios)
reemplazar_string,(reemplazar reemplazo string),generales,for elemento in reemplazar,string=string.replace(elemento reemplazo),return string
reemplazar_toda_la_lista,(lista elementos_reemplazados reemplazo),generales,lista_reemplazada=,for elemento in lista,elemento=reemplazar_string(elementos_reemplazados reemplazo elemento),lista_reemplazada.append(elemento),return lista_reemplazada
reunir_parametros,(linea),merge,nueva_lista=,for x in range (2 len(linea)),nueva_lista.extend( linea x ),"nueva_lista=item_necesario(nueva_lista "" "" "" "")","final = unir_linea(nueva_lista "" "")",return final
seccion_comentarios,(lectura lista_comentarios lista_fuente),merge,i = 0,encontro = False,while i<len(lectura) and encontro == False,elemento = lectura i,"if elemento == ""# "" and i>0 ",encontro = True,comentario = lectura ilen(lectura),fuente_unico = lectura 0i,"lista_fuente.append(unir_linea(fuente_unico "" ""))","lista_comentarios.append(unir_linea(comentario "" ""))","elif elemento == ""# "" and i==0 ",encontro = True,"lista_comentarios.append(unir_linea(lectura "" ""))","elif elemento == '""""""'","lectura = reemplazar_toda_la_lista(lectura '""""""' """")","lista_comentarios.append(unir_linea(lectura "" ""))",i+=1,return lista_fuente lista_comentarios
separador_archivos,(lista_archivos),merge,comentarios =,fuente_unico =,for ruta in lista_archivos,"if ""comentarios"" in ruta",comentarios.append(ruta),else,fuente_unico.append(ruta),mezcla(comentarios),mezcla(fuente_unico)
tabla_consultas,(archivo),tabla,contador=0,archivo.seek(0),nueva_lista=,"linea=leer_linea_clasico(archivo "" "")","print(""{}"".format(""\tFunciones\n"".expandtabs(1)))","print("" ----------------------------------------------------------------------------------------------------------------------------------------------------------------------"")","while linea 0 !="""" or nueva_lista 0 !=""""",if contador!=5,nueva_lista.append(linea 0 ),contador+=1,else,espaciador1=32-len(nueva_lista 0 ),espaciador2=32-len(nueva_lista 1 ),espaciador3=32-len(nueva_lista 2 ),espaciador4=32-len(nueva_lista 3 ),espaciador5=32-len(nueva_lista 4 ),"print("" |{0}{5}|{1}{6}|{2}{7}|{3}{8}|{4}{9}|"".format(nueva_lista 0 nueva_lista 1 nueva_lista 2 nueva_lista 3 nueva_lista 4","""\t"".expandtabs(espaciador1) ""\t"".expandtabs(espaciador2) ""\t"".expandtabs(espaciador3) ""\t"".expandtabs(espaciador4) ""\t"".expandtabs(espaciador5)))",nueva_lista=,contador=0,nueva_lista.append(linea 0 ),"linea=leer_linea_clasico(archivo "" "")","print("" ----------------------------------------------------------------------------------------------------------------------------------------------------------------------"")",return
texto_menu,(),menu,"print("""""" 1- Panel general de funciones",2-Consulta de funciones,3-Analizador de reutilización de código,4-Árbol de invocación,"5-Información por desarrollador"""""")"
tipo_archivos,(archivo),generales,"if ""comentarios"" in archivo","archivo_unico = ""comentarios.csv""",else,"archivo_unico = ""fuente_unico.csv""",return archivo_unico
unir,(dic lista_fu lista_com),panel_general_de_funciones,invocaciones(lista_fu dic),"contador( ""for"" ""while"" ""break"" ""exit"" ""return"" ""if"" ""elif"" lista_fu dic)",lineas_coment(lista_com dic),ayuda(lista_com dic),autor(lista_com dic),return dic
unir_linea,(linea condicion_union),generales,return condicion_union.join(linea)
validacion_archivo_programas,(),generales,"archivo = open(""programas.txt"")",linea = archivo.readline(),validacion = False,if not linea,validacion = True,archivo.seek(0),archivo.close(),return validacion
veces_invocadas,(linea),reutilizacion_codigo,funciones = lista_de_funciones(),cant_invocaciones = {},for funcion in funciones,for palabras in linea 3-1 ,"if ""{}("".format(funcion) in palabras and funcion not in cant_invocaciones",cant_invocaciones funcion = 1,"elif ""{}("".format(funcion) in palabras and funcion in cant_invocaciones",cant_invocaciones funcion += 1,return cant_invocaciones
