analiza_codigo,(),funciones_archivos.py,Nicolas,lista_archivos = [],with open("programas.txt"  'r') as rutas:,ruta = leer_linea_string(rutas),i = 0,while ruta:,i+=1,nombre_archivo = ruta.split("/").pop(),with open(ruta 'r') as codigo:,fuente_unico comentarios = validar_linea(nombre_archivo codigo),ruta_fuente = "fuente_unico"+str(i) +".csv",ruta_comentarios= "comentarios"+str(i) +".csv",generar_archivo(fuente_unico ruta_fuente),generar_archivo(comentarios ruta_comentarios),lista_archivos.append(ruta_fuente),lista_archivos.append(ruta_comentarios),ruta = leer_linea_string(rutas),return lista_archivos
generar_archivo,(lista ruta),funciones_archivos.py,Nicolas,archivo = open(ruta "w"),for funcion in lista:,leyenda = " ".join(funcion)+"\n",grabar_archivo(archivo leyenda),archivo.close()
grabar_archivo,(archivo leyenda),funciones_archivos.py,Nicolas,archivo.write(leyenda)
leer_linea,(archivo),funciones_archivos.py,Nicolas,linea = archivo.readline().strip().split(),if linea:,devolver = linea,else:,devolver = "" "" "",return devolver
leer_linea_string,(archivo),funciones_archivos.py,Nicolas,return archivo.readline().strip()
ordenamiento_insercion,(lista),funciones_archivos.py,Nicolas,for indice in range(1 len(lista)):,valor = lista[indice],i = indice-1,variable = True,while i >= 0 and variable == True:,if valor<lista[i]:,lista[i+1] = lista[i],lista[i] = valor,i = i-1,else:,variable = False,return lista
reemplazar_string,(reemplazar reemplazo string):,funciones_archivos.py,Nicolas,con otro parametro reemplazo]""",for elemento in reemplazar:,string=string.replace(elemento reemplazo),return string
seccion_comentarios,(lectura lista_comentarios lista_fuente),funciones_archivos.py,Nicolas,i = 0,encontro = False,while i<len(lectura) and encontro == False:,elemento = lectura[i],if elemento == "#" and i>0 :,encontro = True,comentario = lectura[i:len(lectura)],fuente_unico = lectura[0:i],lista_fuente.append(unir_linea(fuente_unico " ")),lista_comentarios.append(unir_linea(comentario " ")),elif elemento == "#" and i==0 :,encontro = True,lista_comentarios.append(unir_linea(lectura " ")),i+=1,return lista_fuente lista_comentarios
unir_linea,(linea condicion_union),funciones_archivos.py,Nicolas,return condicion_union.join(linea).replace(" " " ")
validar_linea,(nombre_modulo archivo),funciones_archivos.py,Nicolas,a cual de las dos salidas (comentarios y fuente unico) va a ir]""",funciones_fuente = [],funciones_comentarios = [],lectura = leer_linea(archivo),while lectura[0]:,if lectura[0] == "def":,nombre_funcion = lectura[1],parametros = lectura[2].replace(" " " "),linea_fuente = [nombre_funcion parametros nombre_modulo],linea_comentarios = [nombre_funcion],lectura = leer_linea(archivo),while lectura[0] != "def" and lectura[0] != "":,lectura[0]=reemplazar_string([''] "" lectura[0]),if "[Ayuda" in lectura or "Ayuda" in lectura :,union = unir_linea(lectura " "),union = reemplazar_string(['"""' '[' "]" "Ayuda" ":"] "" union).strip(),linea_comentarios.insert(2 union),elif "[Autor" in lectura or "Autor" in lectura :,union = unir_linea(lectura " "),union = reemplazar_string(['"""' '[' ']' "Autor" ":"] "" union).strip(),linea_comentarios.insert(1 union),linea_fuente.insert(3 union),else:,if "#" not in lectura :,linea_fuente.append(unir_linea(lectura " ")),else:,linea_fuente linea_comentarios = seccion_comentarios(lectura linea_comentarios linea_fuente),lectura = leer_linea(archivo),funciones_fuente.append(linea_fuente),funciones_comentarios.append(linea_comentarios),lectura = leer_linea(archivo),return ordenamiento_insercion(funciones_fuente) ordenamiento_insercion(funciones_comentarios)
