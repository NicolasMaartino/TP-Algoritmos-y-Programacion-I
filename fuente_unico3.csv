analizador_funcion,(linea_fuente linea_comentarios archivo),merge,lectura = leer_linea(archivo " "),palabras_faltantes =,while lectura and "def"!= lectura 03 ,lectura= lectura.strip().split(),lectura = reemplazar_toda_la_lista(lectura " " " "),lectura = item_necesario(lectura " " " "),lectura = item_necesario(lectura " " " "),lectura = item_necesario(lectura "# " "# "),cuento = lectura.count('"""'),while cuento == 1,segunda_lectura=leer_linea(archivo " ").strip().split(),segunda_lectura = item_necesario(segunda_lectura " " ""),segunda_lectura = item_necesario(segunda_lectura " " " "),segunda_lectura = item_necesario(segunda_lectura " " " "),lectura.extend(segunda_lectura),cuento = lectura.count('"""'),lectura = reemplazar_toda_la_lista(lectura " " " " "" ""),encontradas = buscar_dato( "Ayuda" "Autor" "# " '"""' lectura),linea_fuente linea_comentarios palabras_faltantes = linea_ayuda_autor(lectura linea_comentarios linea_fuente encontradas palabras_faltantes),if len(encontradas) == 0 and lectura,linea_fuente.append(unir_linea(lectura " ")),lectura = leer_linea(archivo " "),linea_comentarios = encontrar_palabras(palabras_faltantes linea_comentarios),return linea_comentarios linea_fuente lectura
archivos,(),merge,lista_archivos =,rutas = open("programas.txt" 'r'),ruta = leer_linea_string(rutas),i = 0,while ruta,i+=1,nombre_archivo = ruta.split("/").pop(),nombre_archivo=nombre_archivo 0len(nombre_archivo)-3,codigo = open(ruta 'r' newline="\n"),fuente_unico comentarios = proceso_archivos(nombre_archivo codigo),ruta_fuente = "fuente_unico"+str(i) +".csv",ruta_comentarios= "comentarios"+str(i) +".csv",generar_archivo(fuente_unico ruta_fuente),generar_archivo(comentarios ruta_comentarios),lista_archivos.append(ruta_fuente),lista_archivos.append(ruta_comentarios),ruta = leer_linea_string(rutas),separador_archivos(lista_archivos),eliminar_archivos(lista_archivos)
eliminar_archivos,(archivos),merge,for archivo in archivos,remove(archivo)
encontrar_palabras,(palabras linea_comentarios),merge,if "Autor" not in palabras,linea_comentarios.insert(1 "N/N"),if "Ayuda" not in palabras,linea_comentarios.insert(2 "N/N"),return linea_comentarios
guardar_archivo,(archivo_aux lista_archivos),merge,archivo_mezcla = tipo_archivos(lista_archivos 0 ),with open(archivo_mezcla "w") as prestaciones,with open(archivo_aux "r") as auxiliar,entrada = csv.reader(auxiliar),ordenado = sorted(entrada key=lambda fila fila 0 ),for fila in ordenado,salida = csv.writer(prestaciones),salida.writerow(fila),remove(archivo_aux)
indice_vaciado,(lista_datos lista_borrar),merge,i=0,while i<len(lista_datos) and len(lista_borrar)>0,if lista_datos i in lista_borrar,lista_borrar.remove(lista_datos i ),i+=1,return i
linea_ayuda_autor,(linea linea_comentarios linea_fuente palabras_buscadas palabras_faltantes),merge,if "Autor" in palabras_buscadas and "Ayuda" in palabras_buscadas,palabras_faltantes.append("Autor"),palabras_faltantes.append("Ayuda"),i = indice_vaciado(linea "Ayuda" "Autor" ),linea_segunda=linea i-1len(linea),linea_primera = linea 0i-1,linea_primera = reemplazar_toda_la_lista(linea_primera "Autor" "Ayuda" '"""' " " ""),linea_segunda = reemplazar_toda_la_lista(linea_segunda "Autor" "Ayuda" '"""' " " ""),linea_comentarios = agregar_linea_especifica(1 linea_primera linea_comentarios),linea_comentarios = agregar_linea_especifica(2 linea_segunda linea_comentarios),elif "Autor" in palabras_buscadas ,palabras_faltantes.append("Autor"),union=reemplazar_toda_la_lista(linea '"""' ' ' ' ' "Autor" "" ""),linea_comentarios = agregar_linea_especifica(1 union linea_comentarios),elif "Ayuda" in palabras_buscadas,palabras_faltantes.append("Ayuda"),union= reemplazar_toda_la_lista(linea '"""' ' ' ' ' "Ayuda" "" ""),linea_comentarios = agregar_linea_especifica(2 union linea_comentarios),elif "# " in palabras_buscadas or '"""' in palabras_buscadas,linea_fuente linea_comentarios=seccion_comentarios(linea linea_comentarios linea_fuente),return linea_fuente linea_comentarios palabras_faltantes
mezcla,(lista_archivos),merge,archivo_aux = "archivo_aux.csv",with open(archivo_aux "w") as unificado,for archivo in lista_archivos,with open(archivo 'r') as arch,linea = leer_linea(arch " ").strip().split(" "),while linea 0 !="",entrada = csv.writer(unificado),entrada.writerow(linea),linea = leer_linea(arch " ").strip().split(" "),guardar_archivo(archivo_aux lista_archivos)
proceso_archivos,(nombre_modulo archivo),merge,funciones_fuente =,funciones_comentarios =,ultima_lectura = leer_linea(archivo " "),while ultima_lectura,ultima_lectura = ultima_lectura.strip().split(),if len(ultima_lectura)>0 and ultima_lectura 0 == "def",ultima_lectura = item_necesario(ultima_lectura "(" " ("),ultima_lectura = item_necesario(ultima_lectura "" ""),parametros = reunir_parametros(ultima_lectura),nombre_funcion = ultima_lectura 1,parametros = reemplazar_string(" " " " parametros),linea_fuente = nombre_funcion parametros nombre_modulo,linea_comentarios = nombre_funcion,linea_comentarios linea_fuente ultima_lectura = analizador_funcion(linea_fuente linea_comentarios archivo),funciones_fuente.append(linea_fuente),funciones_comentarios.append(linea_comentarios),else# Si no es un def no es una funcion.Probablemente sea un from o un bloque principal.El enunciado no pide analizarlo.,ultima_lectura=leer_linea(archivo " "),return ordenamiento_insercion(funciones_fuente) ordenamiento_insercion(funciones_comentarios)
reunir_parametros,(linea),merge,nueva_lista=,for x in range (2 len(linea)),nueva_lista.extend( linea x ),nueva_lista=item_necesario(nueva_lista " " " "),final = unir_linea(nueva_lista " "),return final
seccion_comentarios,(lectura lista_comentarios lista_fuente),merge,i = 0,encontro = False,while i<len(lectura) and encontro == False,elemento = lectura i,if elemento == "# " and i>0 ,encontro = True,comentario = lectura ilen(lectura),fuente_unico = lectura 0i,lista_fuente.append(unir_linea(fuente_unico " ")),lista_comentarios.append(unir_linea(comentario " ")),elif elemento == "# " and i==0 ,encontro = True,lista_comentarios.append(unir_linea(lectura " ")),elif elemento == '"""',lectura = reemplazar_toda_la_lista(lectura '"""' ""),lista_comentarios.append(unir_linea(lectura " ")),i+=1,return lista_fuente lista_comentarios
separador_archivos,(lista_archivos),merge,comentarios =,fuente_unico =,for ruta in lista_archivos,if "comentarios" in ruta,comentarios.append(ruta),else,fuente_unico.append(ruta),mezcla(comentarios),mezcla(fuente_unico)
