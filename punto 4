def leo_archivo(archivo):
    linea = archivo.readline()
    linea_archivo = linea.rstrip()
    return linea_archivo.split(',')

def lista_de_funciones(fuente_unico):
    funciones = []
    fuente_unico.seek(0)
    linea = leo_archivo(fuente_unico)
    while linea[0] != "":
        funciones.append(linea[0])
        linea = leer_archivo(fuente_unico)
    fuente_unico.seek(0)
    return funciones


def veces_invocaciones(funciones,linea):   
    veces_invocadas = {}
    for funcion in funciones:
        for palabras in linea[3:-1]:
            if funcion in palabras and funcion not in veces_invocadas:
                 veces_invocadas[funcion] = 1
            elif funcion in palabras and funcion in veces_invocadas:
                 veces_invocadas[funcion] += 1
    
    return veces_invocadas

def funciones_invocadas(archivo):
    linea = leo_archivo(archivo)
    invocaciones = {}
    while linea[0] != "":
        funcion_que_llama = linea[0]        
        invocaciones[funcion_que_llama] = busco_invocaciones(archivo)
        linea = leo_archivo(archivo)
    
    return invocaciones
# {a:{e:1}}

def total_invocaciones(filas,funciones,total):
    for funcion_que_llama in invocaciones:
        for i in range(0,len(funciones)):
            if funcion_que_llama in invocaciones[funciones[i]]:
                total += invocaciones[funciones[i]][funcion_que_llama]
    return total
